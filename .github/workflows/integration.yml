name: Bundle Integration Tests

on:
  # pushes to release branches
  push:
    branches:
      - "main"
  # all PRs, important to note that `pull_request_target` workflows
  # will run in the context of the target branch of a PR since this
  # is a public repo
  pull_request_target:
  workflow_dispatch:
    inputs:
      test_ref:
        description: the ref (either sha or branch) to test against
        default: 'main'

# explicitly turn off permissions for `GITHUB_TOKEN`
permissions: read-all

# will cancel previous workflows triggered by the same event and for the same ref for PRs or same SHA otherwise
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ contains(github.event_name, 'pull_request') && github.event.pull_request.head.ref || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
       os: ["macos-latest", "ubuntu-latest"]
       python-version: ["3.8", "3.11"]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.python-version }} Test

    steps:
      - name: Check out the repository (non-PR)
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Check out the repository (PR)
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libsasl2-dev build-essential

      - name: Python setup
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      
      - name: Run Unit Tests
        run: tox -e unit

      - name: Run Integration Tests (long running)
        # run integration tests even when unit tests fail
        if: ${{ always() }}
        run: tox -r -e integration
