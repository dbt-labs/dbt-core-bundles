# **what?**
# This workflow tests installing a bundle for a given os and python version
# Using a composite action for efficiency of runners.

name: test-bundle-install
description: "test installing a bundle for a given os/python/dbt version"

inputs:
  tag:
    description: The release version number (i.e. 1.5.12).
  python_version:
    description: The version of python to test against
    required: true
  os_platform:
    description: The os platform of the worker performing the test
    required: true
  draft:
    description: Whether the release is a draft
    required: true

runs:
  using: composite
  steps:
    - name: "Checkout Repo"
      uses: actions/checkout@v3

    - name: "Set up Python ${{ inputs.python_version }}"
      uses: actions/setup-python@v4
      with:
        python-version: "${{ inputs.python_version }}"

    - name: "Set up venv"
      shell: bash
      run: |
        exit 1
        python -m venv env test_release_install
        source test_release_install/bin/activate
        pip install --upgrade pip

    - name: "Install Published Release"
      if: ${{ !inputs.draft }}
      shell: bash
      run: |
        bash install_bundle.sh \
          "${{ inputs.tag }}" \
          "${{ inputs.python_version }}" \
          "${{ inputs.os_platform }}"
        pip freeze
        dbt --version

    - name: "Install Draft Release"
      if: ${{ inputs.draft }}
      shell: bash
      run: |
        bash ./.github/scripts/install_draft_bundle.sh \
          "${{ inputs.tag }}" \
          "${{ inputs.python_version }}" \
          "${{ inputs.os_platform }}"
        pip freeze
        dbt --version
      env:
          GH_TOKEN: ${{ github.token }}